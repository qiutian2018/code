####测试驱动开发
1、在编写任何产品代码之前，先编写测试代码
2、运行改测试，这时候测试必然会失败
3、用最简单的方式来修复这个失败
4、重构代码，使得代码更加清晰，容易扩展

--初衷是以最小的付出来完成功能，并且会获得很多额外的好处
1、编写完善的测试
2、避免过度设计
3、在修复bug的时候更加有信息，你可以立刻知道修改会引起哪些其他的影响

可以在很大程度上提高代码质量，提高开发效率，降低修复bug的成本，但是对开发人员的额要求也较高，特别是在环境配置上需要花费一些"额外"的时间：
1、如何快速运行测试
2、如何在发生错误时快速定位
3、测试代码需要用哪种语言编写
4、在持续集成环境中是否容易执行测试


